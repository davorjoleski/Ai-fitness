import emailjs from '@emailjs/browser';

interface EmailData {
  fullName: string;
  email: string;
  fitnessGoal: string;
  daysPerWeek: string;
}

interface EmailResponse {
  success: boolean;
  message: string;
}

export class EmailService {
  private serviceId: string;
  private templateId: string;
  private publicKey: string;
  private isConfigured: boolean;

  constructor() {
    this.serviceId = import.meta.env.VITE_EMAILJS_SERVICE_ID || '';
    this.templateId = import.meta.env.VITE_EMAILJS_TEMPLATE_ID || '';
    this.publicKey = import.meta.env.VITE_EMAILJS_PUBLIC_KEY || '';
    
    this.isConfigured = !!(this.serviceId && this.templateId && this.publicKey);
    
    if (this.isConfigured) {
      // Initialize EmailJS
      emailjs.init(this.publicKey);
    }
  }

  async sendWorkoutPlan(data: EmailData): Promise<EmailResponse> {
    // If EmailJS is not configured, simulate success for development
    if (!this.isConfigured) {
      console.log('EmailJS not configured, simulating email send:', data);
      
      // Simulate network delay
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      return {
        success: true,
        message: 'Email sent successfully! (Development mode - no actual email sent)'
      };
    }

    try {
      // Generate personalized workout plan content
      const workoutPlan = this.generateWorkoutPlan(data);
      
      // Prepare template parameters
      const templateParams = {
        to_name: data.fullName,
        to_email: data.email,
        fitness_goal: data.fitnessGoal,
        days_per_week: data.daysPerWeek,
        workout_plan: workoutPlan,
        from_name: 'AI Fit Coach',
        reply_to: 'noreply@aifitcoach.com'
      };

      // Send email using EmailJS
      const response = await emailjs.send(
        this.serviceId,
        this.templateId,
        templateParams
      );

      if (response.status === 200) {
        return {
          success: true,
          message: 'Your personalized workout plan has been sent to your email!'
        };
      } else {
        throw new Error('Failed to send email');
      }
    } catch (error) {
      console.error('EmailJS error:', error);
      
      return {
        success: false,
        message: 'Failed to send email. Please try again or contact support.'
      };
    }
  }

  private generateWorkoutPlan(data: EmailData): string {
    const { fitnessGoal, daysPerWeek } = data;
    const days = parseInt(daysPerWeek);
    
    let plan = `🎯 Your Personalized AI Workout Plan\n\n`;
    plan += `Goal: ${this.formatGoal(fitnessGoal)}\n`;
    plan += `Training Days: ${days} days per week\n\n`;
    
    if (fitnessGoal === 'lose-weight') {
      plan += this.getWeightLossPlan(days);
    } else if (fitnessGoal === 'build-muscle') {
      plan += this.getMuscleBuildingPlan(days);
    } else if (fitnessGoal === 'improve-endurance') {
      plan += this.getEndurancePlan(days);
    } else {
      plan += this.getGeneralFitnessPlan(days);
    }
    
    plan += `\n💡 Pro Tips:\n`;
    plan += `• Start with lighter weights and focus on proper form\n`;
    plan += `• Rest 48-72 hours between training the same muscle groups\n`;
    plan += `• Stay hydrated and get adequate sleep for recovery\n`;
    plan += `• Progress gradually by increasing weight, reps, or duration\n\n`;
    
    plan += `📧 Questions? Reply to this email for personalized advice!\n`;
    plan += `🤖 Generated by AI Fit Coach - Your Personal Fitness Assistant`;
    
    return plan;
  }

  private formatGoal(goal: string): string {
    const goalMap: { [key: string]: string } = {
      'lose-weight': 'Weight Loss',
      'build-muscle': 'Muscle Building',
      'get-healthier': 'General Health',
      'improve-endurance': 'Endurance Improvement',
      'general-fitness': 'General Fitness'
    };
    return goalMap[goal] || goal;
  }

  private getWeightLossPlan(days: number): string {
    let plan = `🔥 Weight Loss Focus Plan\n\n`;
    
    if (days >= 5) {
      plan += `Day 1: Full Body Strength + 20min Cardio\n`;
      plan += `Day 2: HIIT Cardio (30min)\n`;
      plan += `Day 3: Upper Body Strength + 15min Cardio\n`;
      plan += `Day 4: Lower Body Strength + 15min Cardio\n`;
      plan += `Day 5: Active Recovery (Walking, Yoga)\n`;
      if (days >= 6) plan += `Day 6: Full Body Circuit Training\n`;
      if (days === 7) plan += `Day 7: Light Cardio or Rest\n`;
    } else if (days >= 3) {
      plan += `Day 1: Full Body Strength + 20min Cardio\n`;
      plan += `Day 2: HIIT Cardio (30min)\n`;
      plan += `Day 3: Full Body Strength + 20min Cardio\n`;
      if (days >= 4) plan += `Day 4: Active Recovery + Light Cardio\n`;
    } else {
      plan += `Day 1: Full Body Strength + 30min Cardio\n`;
      if (days === 2) plan += `Day 2: HIIT Cardio + Core Work\n`;
    }
    
    return plan;
  }

  private getMuscleBuildingPlan(days: number): string {
    let plan = `💪 Muscle Building Focus Plan\n\n`;
    
    if (days >= 5) {
      plan += `Day 1: Chest & Triceps\n`;
      plan += `Day 2: Back & Biceps\n`;
      plan += `Day 3: Legs & Glutes\n`;
      plan += `Day 4: Shoulders & Core\n`;
      plan += `Day 5: Full Body Compound Movements\n`;
      if (days >= 6) plan += `Day 6: Arms & Core Focus\n`;
      if (days === 7) plan += `Day 7: Active Recovery\n`;
    } else if (days >= 3) {
      plan += `Day 1: Upper Body (Push)\n`;
      plan += `Day 2: Lower Body\n`;
      plan += `Day 3: Upper Body (Pull)\n`;
      if (days >= 4) plan += `Day 4: Full Body Compound\n`;
    } else {
      plan += `Day 1: Full Body Strength\n`;
      if (days === 2) plan += `Day 2: Full Body Strength (Different Exercises)\n`;
    }
    
    return plan;
  }

  private getEndurancePlan(days: number): string {
    let plan = `🏃 Endurance Improvement Plan\n\n`;
    
    if (days >= 5) {
      plan += `Day 1: Steady State Cardio (45min)\n`;
      plan += `Day 2: Interval Training\n`;
      plan += `Day 3: Strength Training for Endurance\n`;
      plan += `Day 4: Long Slow Distance\n`;
      plan += `Day 5: HIIT Training\n`;
      if (days >= 6) plan += `Day 6: Active Recovery\n`;
      if (days === 7) plan += `Day 7: Easy Cardio or Rest\n`;
    } else if (days >= 3) {
      plan += `Day 1: Steady State Cardio (30-45min)\n`;
      plan += `Day 2: Interval Training\n`;
      plan += `Day 3: Strength + Cardio Combo\n`;
      if (days >= 4) plan += `Day 4: Long Cardio Session\n`;
    } else {
      plan += `Day 1: Cardio + Strength Combo\n`;
      if (days === 2) plan += `Day 2: Interval Training + Core\n`;
    }
    
    return plan;
  }

  private getGeneralFitnessPlan(days: number): string {
    let plan = `🎯 General Fitness Plan\n\n`;
    
    if (days >= 4) {
      plan += `Day 1: Full Body Strength\n`;
      plan += `Day 2: Cardio + Core\n`;
      plan += `Day 3: Upper Body + Flexibility\n`;
      plan += `Day 4: Lower Body + Cardio\n`;
      if (days >= 5) plan += `Day 5: Active Recovery + Yoga\n`;
      if (days >= 6) plan += `Day 6: Full Body Circuit\n`;
      if (days === 7) plan += `Day 7: Light Activity or Rest\n`;
    } else if (days >= 2) {
      plan += `Day 1: Full Body Strength + Cardio\n`;
      plan += `Day 2: Cardio + Flexibility\n`;
      if (days >= 3) plan += `Day 3: Full Body Strength + Core\n`;
    } else {
      plan += `Day 1: Full Body Workout (Strength + Cardio + Flexibility)\n`;
    }
    
    return plan;
  }
}